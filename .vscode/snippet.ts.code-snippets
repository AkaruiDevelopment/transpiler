{
  // Place your aoijs.compiler workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Add a Function": {
    "scope": "javascript,typescript",
    "prefix": "function",
    "body": [
      "import { Scope } from \"../scope\";",
      "import { funcData, FunctionData } from \"../typings/interface\";",
      "import { escapeResult } from \"../util\";",
      "export const ${1:name}: FunctionData = {",
      "  name: \"${1:name}\",",
      "  brackets: ${2:brackets},",
      "  optional:${3:optional},",
      "  type: \"${4:type}\",",
      "  fields: [${5:fields}],",
      "  description: \"${6:desc}\",",
      "  default: [${7:default}],",
      "  returns: ${8:return},",
      "version: \"1.0.0\",",
      "  code: (data: funcData, scope: Scope[]) => {",
      "",
      "  },",
      "};"
    ],
    "description": "Add a function"
  }
}
